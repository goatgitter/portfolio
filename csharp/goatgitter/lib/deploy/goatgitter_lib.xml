<?xml version="1.0"?>
<doc>
    <assembly>
        <name>goatgitter_lib</name>
    </assembly>
    <members>
        <member name="T:goatgitter.lib.Base">
            Base class from which other classes will inherit.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <!-- Badly formed XML comment ignored for member "P:goatgitter.lib.Base.AppPath" -->
        <member name="M:goatgitter.lib.Base.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.Base.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.Base.ToString">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.BaseWithLog">
            Base class with Logging from which other classes will inherit.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="P:goatgitter.lib.BaseWithLog.AppNotepad">
            <summary>
            Static Application Notepad Property for logging purposes.
            </summary>
        </member>
        <member name="P:goatgitter.lib.BaseWithLog.Notepad">
            <summary>
             Instance Notepad Property for logging purposes.
            </summary>
        </member>
        <member name="M:goatgitter.lib.BaseWithLog.#ctor(goatgitter.lib.tools.ILogger,goatgitter.lib.tools.ILogger)">
            <summary>
            Constructor for BaseWithLog Objects.
            Automatically creates a Notepad for logging.
            </summary>
        </member>
        <member name="T:goatgitter.lib.Constants">
            <summary>
            Class of static Constants used throughout the application.
            </summary>
        </member>
        <member name="T:goatgitter.lib.extensions.Exceptions">
            Extension class for Exceptions.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.extensions.Exceptions.LogPrint(System.Exception)">
            <summary>
            Prints details about an Exception for Logging purposes.
            </summary>
            <param name="exception">The exception to inspect for details to log.</param>
            <returns>A String containing the relevant details from the exception object.</returns>
        </member>
        <member name="T:goatgitter.lib.extensions.Ints">
            Extension class for Ints.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.extensions.Ints.IsPositive(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.extensions.Ints.ToSafeString(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.extensions.Objects">
            Extension class for Objects.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.extensions.Objects.SafeToString(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.extensions.Objects.IsEmpty(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.extensions.Objects.IsNotEmpty(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.extensions.Objects.SafeEquals(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.extensions.StringBuilders">
            Extension class for StringBuilders.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.extensions.StringBuilders.AppendIf(System.Text.StringBuilder,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.extensions.StringBuilders.AppendLineIf(System.Text.StringBuilder,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.extensions.Strings">
            Extension class for Strings.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.extensions.Strings.WordCount(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.extensions.Strings.IsEmpty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.extensions.Strings.IsNotEmpty(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.BaseWithLogTest">
            BaseWithLogTest class Tests the BaseWithLog class.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="T:goatgitter.lib.tests.BaseWithLogTest.TestClass">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseWithLogTest.SetupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseWithLogTest.CleanupTest">
            <summary>
            Resets objects modified during the test execution.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.BaseWithLogTest.ConstructorTest">
            <summary>
            Tests the Constructor
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.BaseWithLogTest.EqualsTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseWithLogTest.ToStringTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseWithLogTest.GetHashCodeTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseWithLogTest.CloneTest">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.tools.FilerTest">
             MIT License
             Copyright (c) 2022 goatgitter
             ClassName : FilerTest
             Purpose : Tests the Filer Class.
            
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SetupTest">
            <summary>
            Creates initial state of the objects for test execution.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.CleanupTest">
            <summary>
            Resets objects modified during the test execution.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.ConstructorTest">
            <summary>
            Tests the Constructor
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SafeGetFilePathTestForNoErrorNullResult(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Tests the SafeGetFilePath method for cases where:
                There are no errors and the result is null.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SafeGetFilePathTestForNoErrorNotNullResult(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Tests the SafeGetFilePath method for cases where:
                There are no errors and the result is NOT null.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SafeGetFilePathForInvalid(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Tests the SafeGetFilePath Method method for cases where:
            There is one error and the result is null.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SafeCreateDirectoryTest(System.String)">
            <summary>
            Tests the SafeCreateDirectory Method for cases where:
            No Errors, and result is true
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SafeCreateDirectoryForErrorTest(System.String)">
            <summary>
            Tests the SafeCreateDirectory Method for cases where:
            On Error, and result is false
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SafeDeleteFolderTestNoErrorTrueResult(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tests the SafeDeleteFolder Method 
            For cases where the method should not error and return a result of true.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.FilerTest.SafeDeleteFolderTestErrorFalseResult(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tests the SafeDeleteFolder Method 
            For cases where the method should error and return a result of false.
            </summary>
        </member>
        <member name="T:goatgitter.lib.tests.tools.LoggerTest">
             MIT License
             Copyright (c) 2022 goatgitter
             ClassName : LoggerTest
             Purpose : Tests the Logger Class.
            
        </member>
        <member name="M:goatgitter.lib.tests.tools.LoggerTest.SetupTest">
            <summary>
            Creates initial state of the objects for test execution.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.LoggerTest.CleanupTest">
            <summary>
            Resets objects modified during the test execution.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.LoggerTest.ConstructorTest">
            <summary>
            Tests the Constructor
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.LoggerTest.LogInfoTest">
            <summary>
            Tests the LogInfo Method
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.LoggerTest.LogErrorTest">
            <summary>
            Tests the LogError Method
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.LoggerTest.LogExceptionTest">
            <summary>
            Tests the LogException Method
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.tools.LoggerTest.LogExceptionWithDataTest">
            <summary>
            Tests the LogException Method
            </summary>
        </member>
        <member name="T:goatgitter.lib.tests.BaseTest">
            BaseTest class Tests the Base class.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="T:goatgitter.lib.tests.BaseTest.TestClass">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseTest.SetupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseTest.CleanupTest">
            <summary>
            Resets objects modified during the test execution.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.BaseTest.ConstructorTest">
            <summary>
            Tests the Constructor
            </summary>
        </member>
        <member name="M:goatgitter.lib.tests.BaseTest.EqualsTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseTest.ToStringTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseTest.GetHashCodeTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.BaseTest.CloneTest">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.extensions.ExceptionsTest">
            ObjectsTest class Tests the Objects extension class.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ExceptionsTest.SetupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ExceptionsTest.CleanupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ExceptionsTest.LogPrintTest">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.extensions.IntsTest">
            ObjectsTest class Tests the Objects extension class.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.tests.extensions.IntsTest.SetupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.IntsTest.CleanupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.IntsTest.IsPositiveTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.IntsTest.ToSafeStringTest">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.extensions.ObjectsTest">
            ObjectsTest class Tests the Objects extension class.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ObjectsTest.SetupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ObjectsTest.CleanupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ObjectsTest.IsEmptyTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ObjectsTest.IsNotEmptyTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ObjectsTest.SafeToStringTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.ObjectsTest.SafeEqualsTest">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.extensions.StringBuildersTest">
            ObjectsTest class Tests the Objects extension class.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringBuildersTest.SetupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringBuildersTest.CleanupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringBuildersTest.AppendIfTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringBuildersTest.AppendLineIfTest">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.extensions.StringsTest">
            ObjectsTest class Tests the Objects extension class.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringsTest.SetupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringsTest.CleanupTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringsTest.IsEmptyTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringsTest.IsNotEmptyTest">
            <inheritdoc/>
        </member>
        <member name="M:goatgitter.lib.tests.extensions.StringsTest.WordCountTest">
            <inheritdoc/>
        </member>
        <member name="T:goatgitter.lib.tests.TestBase">
            TestBase class from which other Test classes will inherit.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="T:goatgitter.lib.tools.Filer">
            Utility class Filer gracefully handles File Input and Output Operations.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="M:goatgitter.lib.tools.Filer.#ctor(goatgitter.lib.tools.ILogger)">
            <summary>
            Constructor for the Filer Class.
            Filers come equiped with a Notepad to record details it might need later.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tools.Filer.SafeGetFilePath(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Safely gets a Path object for the params specified.
            </summary>
            <param name="folder">The directory where the file resides.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="createFolder">A boolean that specifies if the folder should automatically be created if it does not exist.</param>
            <param name="createFile">A boolean that specifies if the file should automatically be created if it does not exist.</param>
            <returns>A String for the Combined File Path.</returns>
        </member>
        <member name="M:goatgitter.lib.tools.Filer.SafeCreateDirectory(System.String)">
            <summary>
            Safely creates a Directory.
            </summary>
            <param name="folder">The directory to be created.</param>
            <returns></returns>
        </member>
        <member name="M:goatgitter.lib.tools.Filer.SafeCreateFile(System.String)">
            <summary>
            Safely creates a file.
            </summary>
            <param name="filePath">The file path where the file will be created.</param>
            <returns></returns>
        </member>
        <member name="M:goatgitter.lib.tools.Filer.SafeDeleteFolder(System.String,System.Boolean)">
            <summary>
            Safely gets a Path object for the params specified.
            </summary>
            <param name="folder">The directory where the file resides.</param>
            <param name="emptyFolder">A boolean that specifies if the folder should automatically be emptied.</param>
            <returns></returns>
        </member>
        <member name="M:goatgitter.lib.tools.Filer.CreateFileForWrite(System.String,System.String)">
            <summary>
            Creates an empty a File.
            </summary>
            <param name="folder">The directory where the file resides.</param>
            <param name="fileName">The name of the file to create for write.</param>
            <returns>bool result</returns>
        </member>
        <member name="M:goatgitter.lib.tools.Filer.RetrieveFileForUpdate(System.String,System.String)">
            <summary>
            Opens a File for writing information.
            </summary>
            <param name="folder">The directory where the file resides.</param>
            <param name="fileName">The name of the file to retrieve for update.</param>
            <returns>bool result</returns>
        </member>
        <member name="T:goatgitter.lib.tools.Logger">
            Utility class Logger handles exceptions gracefully.
            MIT License
            Copyright (c) 2022 goatgitter
            
        </member>
        <member name="P:goatgitter.lib.tools.Logger.Log">
            <summary>
            The Log4Net Log
            </summary>
        </member>
        <member name="P:goatgitter.lib.tools.Logger.LogType">
            <summary>
            The Type that will be printed in the Log4Net Log Messages.
            </summary>
        </member>
        <member name="M:goatgitter.lib.tools.Logger.#ctor(log4net.ILog,System.Type)">
            <summary>
            Constructor for the Logger class that automatically sets the Log Type to the caller's type.
            </summary>
            <param name="log">The log4net log to use, or null.  If Null, automatically created.</param>
            <param name="logType">They Type to be printed in the Log4Net Log Messages.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:goatgitter.lib.tools.Logger.Started" -->
        <member name="M:goatgitter.lib.tools.Logger.LogInfo(System.String)">
            <summary>
            Logs a message to the Log at the Info Level.
            </summary>
            <param name="info">A string containing the message to be logged.</param>
        </member>
        <member name="M:goatgitter.lib.tools.Logger.LogError(System.String)">
            <summary>
            Logs a message to the Log at the Error Level.
            </summary>
            <param name="error">A string containing the message to be logged.</param>
        </member>
        <member name="M:goatgitter.lib.tools.Logger.LogWarn(System.String)">
            <summary>
            Logs a message to the Log at the Warning Level.
            </summary>
            <param name="warning">A string containing the message to be logged.</param>
        </member>
        <member name="M:goatgitter.lib.tools.Logger.LogException(System.String,System.Exception)">
            <summary>
            Logs a message to the Log at the Error Level.
            </summary>
            <param name="message">A string containing the message to be logged.</param>
            <param name="exception">An exception contianing information to be logged.</param>
        </member>
        <member name="M:goatgitter.lib.tools.Logger.LogExceptionWithData(System.String,System.Object[],System.Exception)">
            <summary>
            Logs a message with data to the Log at the Error Level.
            </summary>
            <param name="message">A string containing the message to be logged.</param>
            <param name="messageData">An array of objects containing the data for the message to be logged.</param>
            <param name="exception">An exception contianing information to be logged.</param>
        </member>
    </members>
</doc>
